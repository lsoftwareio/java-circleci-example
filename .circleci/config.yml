version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: gradle dependencies

      # Save resolved dependencies on cache
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      - run:
          name: Build project
          command: ./gradlew build -x integrationTest

      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/test/.*xml" -exec cp {} ~/junit/ \;
          when: always

      - store_test_results:
          path: ~/junit

      - store_artifacts:
          path: ~/junit

      - persist_to_workspace:
          root: ~/project
          paths:
            - build/libs/hello-webapp-*.jar

  integration-tests:
    machine: true
    steps:
      - checkout
      - attach_workspace:
          at: ~/project

      - run:
          name: Build docker image
          command: docker build -t lsoftware/hello-webapp:1.0.0 . --build-arg JAR_FILE=build/libs/hello-webapp-*.jar

      - run:
          name: Start application container
          command: docker run -d -p 8080:8080 --name hello-webapp lsoftware/hello-webapp:1.0.0

      - run:
          name: Run integration tests
          command: docker run -v $(pwd):/home/circleci/project --network container:hello-webapp -i openjdk:8-jdk-alpine /bin/sh -c "cd /home/circleci/project; ./gradlew integrationTest;"

workflows:
  version: 2
  pipeline:
    jobs:
      - build
      - integration-tests:
          requires:
            - build